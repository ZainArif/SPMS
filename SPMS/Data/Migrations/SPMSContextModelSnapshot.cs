// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SPMS.Data;

namespace SPMS.Migrations
{
    [DbContext(typeof(SPMSContext))]
    partial class SPMSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SPMS.Models.Customer", b =>
                {
                    b.Property<int>("Customer_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Customer_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_No")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Customer_Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("SPMS.Models.Item", b =>
                {
                    b.Property<int>("Item_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Item_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Item_Id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("SPMS.Models.PurchaseDetail", b =>
                {
                    b.Property<int>("Purchase_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount_Balance")
                        .HasColumnType("int");

                    b.Property<int>("Amount_Paid")
                        .HasColumnType("int");

                    b.Property<DateTime>("Entry_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Purchase_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Purchase_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vender_Id")
                        .HasColumnType("int");

                    b.HasKey("Purchase_Id");

                    b.HasIndex("Vender_Id");

                    b.ToTable("PurchaseDetail");
                });

            modelBuilder.Entity("SPMS.Models.PurchaseItems", b =>
                {
                    b.Property<int>("Purchase_Item_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Available_Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Entry_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Item_Id")
                        .HasColumnType("int");

                    b.Property<int>("Purchase_Id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Total_Cost")
                        .HasColumnType("int");

                    b.Property<int>("Unit_Cost")
                        .HasColumnType("int");

                    b.HasKey("Purchase_Item_Id");

                    b.HasIndex("Item_Id");

                    b.HasIndex("Purchase_Id");

                    b.ToTable("PurchaseItems");
                });

            modelBuilder.Entity("SPMS.Models.SaleDetail", b =>
                {
                    b.Property<int>("Sale_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount_Balance")
                        .HasColumnType("int");

                    b.Property<int>("Amount_Received")
                        .HasColumnType("int");

                    b.Property<int>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Entry_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Expense")
                        .HasColumnType("int");

                    b.Property<DateTime>("Sale_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Sale_Id");

                    b.HasIndex("Customer_Id");

                    b.ToTable("SaleDetail");
                });

            modelBuilder.Entity("SPMS.Models.SaleItems", b =>
                {
                    b.Property<int>("Sale_Item_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Entry_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Purchase_Item_Id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Sale_Id")
                        .HasColumnType("int");

                    b.Property<int>("Total_Price")
                        .HasColumnType("int");

                    b.Property<int>("Unit_Price")
                        .HasColumnType("int");

                    b.HasKey("Sale_Item_Id");

                    b.HasIndex("Purchase_Item_Id");

                    b.HasIndex("Sale_Id");

                    b.ToTable("SaleItems");
                });

            modelBuilder.Entity("SPMS.Models.Vendor", b =>
                {
                    b.Property<int>("Vender_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact_Person_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contect_Person_No")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vender_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Vender_Id");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("SPMS.Models.PurchaseDetail", b =>
                {
                    b.HasOne("SPMS.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("Vender_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SPMS.Models.PurchaseItems", b =>
                {
                    b.HasOne("SPMS.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("Item_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPMS.Models.PurchaseDetail", "PurchaseDetail")
                        .WithMany()
                        .HasForeignKey("Purchase_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SPMS.Models.SaleDetail", b =>
                {
                    b.HasOne("SPMS.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("Customer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SPMS.Models.SaleItems", b =>
                {
                    b.HasOne("SPMS.Models.PurchaseItems", "PurchaseItems")
                        .WithMany()
                        .HasForeignKey("Purchase_Item_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPMS.Models.SaleDetail", "SaleDetail")
                        .WithMany()
                        .HasForeignKey("Sale_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
